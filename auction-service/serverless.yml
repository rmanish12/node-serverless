service: auction-service

plugins:
  - serverless-bundle
  # allows us to bundle our application using webpack for example
  # also enables us to use modern javascript features
  - serverless-pseudo-parameters
  # helps to interpolate our aws parameters like region, account id, etc.

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: 20201221
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name} #refers to the name under custom-AuctionsTable
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iam:
    role:
      statements:
        - ${file(config/iam/AuctionsTableIAM.yml):AuctionsTableIAM} #refers to the AuctionsTableIAM object at the given file location
        - ${file(config/iam/MailQueueIAM.yml):MailQueueIAM}
        - ${file(config/iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionsTable: ${file(config/resources/AuctionsTable.yml):AuctionsTable} #refers to AuctionsTable object at the given file location
    AuctionsBucket: ${file(config/resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(config/resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          authorizer: ${self:custom.authorizer}

custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable #this AuctionsTable refers to the AuctionsTable under resource-Resources
    arn: !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-agd6387-${self:provider.stage}
